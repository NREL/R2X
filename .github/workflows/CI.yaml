name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DEFAULT_PYTHON: "3.12"
  DEFAULT_OS: ubuntu-latest

jobs:
  pytest:
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        os: [ubuntu-latest, windows-latest]
    permissions:
      pull-requests: write
      contents: write

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Installing dependencies
        run: uv sync --dev

      - name: Running package tests
        run: |
          uv run pytest -vvl --cov --cov-report=xml

      - name: codecov
        uses: codecov/codecov-action@v4.2.0
        if: ${{ matrix.os == env.DEFAULT_OS && matrix.python-version == env.DEFAULT_PYTHON  }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: r2x-test
          fail_ci_if_error: false
          verbose: true

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up pinned Python version
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Installing dependencies
        run: uv sync --dev
      - name: Run pre-commit
        run: |
          uv run pre-commit run --all-files

  mypy:
    runs-on: ubuntu-latest
    name: "mypy"
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - name: Installing dependencies
        run: uv sync --dev
      - name: Run mypy
        run: |
          uv run mypy --config-file=pyproject.toml src/

  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - name: Installing dependencies
        run: uv sync --dev
      - name: Run Ruff
        run: uv run ruff check --output-format=github src/
